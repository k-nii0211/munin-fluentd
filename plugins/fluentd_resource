#!/usr/bin/python

import os
import sys
import subprocess

def get_metrics(condition):
    cpu, mem, size, rss = [0,0,0,0]
    if condition == None:
        return cpu, mem, size, rss
    out, err = subprocess.Popen("ps aux | " + condition , shell=True, stdout=subprocess.PIPE).communicate()
    ret = out.splitlines()
    for r in ret:
        params = r.split()
        if len(params) < 6:
            continue
        cpu += float(params[2])
        mem += float(params[3])
        size += int(params[4])
        rss += int(params[5])
    
    return cpu, mem, size, rss

def munin(condition):
    cpu,mem,size,rss = get_metrics(condition)
    print "cpu.value " + str(cpu)
    print "mem.value " + str(mem)
    print "size.value " + str(size)
    print "rss.value " + str(rss)

def config():
    print "graph_title fluentd resource usage"
    print "graph_category fluentd"

if __name__ == "__main__":
    if os.environ.get('package'):
        package = os.environ.get('package')
    else: 
        package = 'fluentd'

    if package == "fluentd":
        condition = " grep ruby | grep fluentd | grep -v grep "
    elif package == "td-agent":
        condition = " grep ruby | grep td-agent | grep -v grep "
    else: 
        condition = os.environ.get('condition')

    if len(sys.argv) > 1 and sys.argv[1] == "config":
        config()
    else:
        munin(condition)


